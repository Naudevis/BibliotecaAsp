
@using Biblioteca.Business.Interfaces
@using Microsoft.EntityFrameworkCore.Metadata.Internal

@inject IAuthorRepository AuthorRepository
@using Biblioteca.Data.Models
@inject NavigationManager Navigation

<EditForm Model="AuthorP" OnValidSubmit="OnMAuthorSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <p style="color:red">@MessageP</p>
    @if (TitleP == "Actualizar")
    {
        <div>

            <label> Cédula </label>
            <InputText @bind-Value="AuthorP.Author_id" class="form-control"  disabled />

        </div>
    }
    else
    {
        <div>

            <label> Cédula </label>
            <InputText @bind-Value="AuthorP.Author_id" placeholder="Introduce entre 9 y 12 dígitos" class="form-control" />

        </div>
    }


    <div>

        <label> Nombre </label>
        <InputText @bind-Value="AuthorP.Name" placeholder="Introduce al menos 3 caracteres" class="form-control" />

    </div>
    <div>

        <label> Edad </label>
        <InputText @bind-Value="AuthorP.Age" class="form-control" placeholder="Edad entre 0 y 150 años" />

    </div>
    <div>

        <label> Biografía </label>
        <InputText @bind-Value="AuthorP.Biography" class="form-control" placeholder="Escribe al menos 15 caracteres" />

    </div>
   


    <div class="modal-footer">
        @ChildContent

        <button type="submit" class="btn btn-success">@TitleP</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public Author AuthorP { get; set; }
   
    [Parameter] public string TitleP { get; set; }
    [Parameter] public string MessageP { get; set; }

    [Parameter] public EventCallback OnMAuthorSubmit { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }


}
